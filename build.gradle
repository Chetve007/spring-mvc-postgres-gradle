plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'ru.alex.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

import org.apache.tools.ant.filters.ReplaceTokens
processResources {
	with copySpec {
		from 'src/main/resources'
		include '** ** /application** .yml'
		include '** ** /application** .yaml'
		include '** ** /application** .properties'
		include '** ** /loc** .properties'
		project.properties.findAll().each {
			prop ->
				if (prop.value != null) {
					filter(ReplaceTokens, tokens:[(prop.key): prop.value])
					filter(ReplaceTokens, tokens:[('project.' + prop.key): prop.value])
				}
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile group: 'org.postgresql', name: 'postgresql', version: '42.2.8'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compile ("org.springframework.boot:spring-boot-starter-security")
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.2.2.RELEASE'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}